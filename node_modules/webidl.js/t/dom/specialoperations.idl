//  The "omittable" keyword MUST NOT  appear on an operation that has no identifier. 
interface ommittableOperationWithNoIdentifier {
  omittable getter float (in DOMString propertyName);  
};

// commented out for now - bug in widlproc
//interface doubleSpecialKeywordOperation {
//  getter setter getter float (DOMString propertyName);
//};

// there MUST exist at most one stringifier
interface moreThanOneStringifier {
  stringifier DOMString toString();
  stringifier DOMString toLongString();
};

// there MUST exist at most one of each variety of getter, setter, creator and deleter
interface moreThanOneNameGetter {
  getter float getProperty(in DOMString propertyName);
  getter float getProperty2(in DOMString propertyName);
};

interface moreThanOneIndexSetter {
  setter void setProperty(unsigned long index, float value);
  setter void setProperty2(unsigned long index, float value);
};

// Special operations declared using operations MUST NOT  be variadic nor have any optional arguments.
interface specialVariadicOperation {
  getter float getProperty(DOMString... propertyName);
};

interface specialOperationWithOptionalArgument {
  creator void setProperty(unsigned long index, optional float value);
};

interface StringifierWithArguments {
  stringifier DOMString toString(float value);
}; 

interface StringifierWrongType {
  stringifier float toString();
}; 

interface StringifierAttributeOnNonString {
  stringifier attribute boolean right;
}; 

interface IndexGetterWithMoreThanOneArgument {
  getter float getProperty(unsigned long index1, unsigned long index2);
};

interface IndexDeleterWithMoreThanOneArgument {
  deleter float deleteProperty(unsigned long index1, unsigned long index2);
};

interface IndexGetterWithNonUnsignedLongArgument {
  getter float getProperty(long index);
};

interface IndexSetterWithMoreThanTwoArguments {
  setter void setProperty(unsigned long index, float value, unsigned long parameter);
};

interface IndexCreatorWithOnlyOneArgument {
  creator void setProperty(unsigned long index);
};

interface IndexCreatorWithWrongFirstArgument {
  creator void setProperty(float index, float value);
};

interface NameGetterWithMoreThanOneArgument {
  getter float getProperty(DOMString name, unsigned long index2);
};

interface NameDeleterWithMoreThanOneArgument {
  deleter float deleteProperty(DOMString name, unsigned long index2);
};

interface NameSetterWithMoreThanTwoArguments {
  setter void setProperty(DOMString name, float value, unsigned long parameter);
};

interface NameCreatorWithOnlyOneArgument {
  creator void setProperty(DOMString name);
};


interface ValidSpecialOperations {
  readonly attribute unsigned long propertyCount;
  omittable getter float getPropertyByIndex(unsigned long index);
  getter float getProperty2(in DOMString propertyName);
  caller float compute(float x);
  caller float computeFaster(float x, float speed);
  stringifier;
  setter creator float setProperty(DOMString name, float value);
  setter creator float setProperty(unsigned long index, float value);
};